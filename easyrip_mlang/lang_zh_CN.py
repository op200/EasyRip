from . import global_val

lang_map: dict[str | global_val.GlobalLangVal.ExtraTextIndex, str] = {
    global_val.GlobalLangVal.ExtraTextIndex.HELP_DOC: "{}\nVersion: {}\n{}\n"
    "\n"
    "\n"
    "Help:\n"
    "  您可以输入命令或使用命令行传参以运行\n"
    "\n"
    "\n"
    "可用命令:\n"
    "\n"
    "  h / help [exit]\n"
    "    打印 help\n"
    "\n"
    "  v / version [exit]\n"
    "    打印版本\n"
    "\n"
    "  $ <code>\n"
    "    Run code directly from the internal environment\n"
    "    Execute the code string directly after the $\n"
    '    The string "\\N" will be changed to real "\\n"\n'
    "\n"
    "  exit\n"
    "    退出程序\n"
    "\n"
    "  cd <string>\n"
    "    更改当前目录\n"
    "\n"
    "  cls / clear\n"
    "    清屏\n"
    "\n"
    "  list <list option>\n"
    "    操作 ripper list\n"
    "\n"
    "    Default:\n"
    "      打印 ripper list\n"
    "\n"
    "    clear / clean:\n"
    "      清空 ripper list\n"
    "\n"
    "    del / pop <index>:\n"
    "      Delete a ripper from ripper list\n"
    "\n"
    "  run [<run option>]\n"
    "    Run the ripper in the ripper list\n"
    "\n"
    "    Default:\n"
    "      仅执行\n"
    "\n"
    "    exit:\n"
    "      Close program when runned\n"
    "\n"
    "  <Option>\n"
    "    -i <input> -o <output> -preset <preset name> [-pipe <vpy pathname> -crf <val> -psy-rd <val> ...] [-sub <subtitle pathname>] [-c:a <audio codec> -b:a <audio bitrate>] [-muxer <muxer> [-r <fps>]] [-run [<run option>]]\n"
    "      Add a new ripper to the ripper list, you can set the values of the options in preset individually, you can run ripper list when use -run\n"
    "\n"
    "\n"
    "Easy Rip options:\n"
    "\n"
    "  -i <string | 'fd'>\n"
    "    Input file's pathname or use file dialog\n"
    "\n"
    "  -o <string>\n"
    "    输出文件的文件名前缀\n"
    "\n"
    "  -preset <string>\n"
    "    设置预设\n"
    "\n"
    "    Preset name:\n"
    "      custom\n"
    "      flac\n"
    "      x264slow\n"
    "      x265fast2 x265fast x265slow x265full\n"
    "\n"
    "  -pipe <string>\n"
    "    Select a vpy file as pipe to input, this vpy must can input\n"
    "    The input in vspipe: vspipe -a input=<input> xxx.vpy\n"
    "\n"
    "  -sub <string | 'auto'>\n"
    "    It makes libass work correctly, input a subtitle pathname when you need hard subtitle\n"
    '    It can add multiple subtitles by "::", e.g. 01.zh-Hans.ass::01.zh-Hant.ass::01.en.srt\n'
    "    If use 'auto', the subtitle files with the same prefix will be used\n"
    "\n"
    "  -c:a <string>\n"
    "    设置音频编码器\n"
    "\n"
    "    Audio encoder:\n"
    "      copy\n"
    "      libopus\n"
    "\n"
    "  -b:a <string>\n"
    "    设置音频码率. 默认值 '160k'\n"
    "\n"
    "  -muxer <string>\n"
    "    设置复用器\n"
    "\n"
    "    可用的复用器:\n"
    "      mp4\n"
    "      mkv\n"
    "\n"
    "  -r / -fps <string>\n"
    "    设置封装的帧率\n"
    "\n"
    "  -custom:format / -custom:template <string>\n"
    "    When -preset custom, this option will run\n"
    "    The string \\34/ -> \", \\39/ -> '\n"
    "\n"
    "  -custom:suffix <string>\n"
    "    When -preset custom, this option will be used as a suffix for the output\n"
    "    Default: mkv\n"
    "\n"
    "  -run [<string>]\n"
    "    执行 ripper list 中的 ripper\n"
    "\n"
    "    Default:\n"
    "      仅执行\n"
    "\n"
    "    exit:\n"
    "      执行后退出程序\n"
    "\n"
    "\n"
    "Codec options:\n"
    "\n"
    "    -hwaccel <string>\n"
    "      Use FFmpeg hwaccel (See 'ffmpeg -hwaccels' for details)\n"
    "\n"
    "    -deinterlacing <bool 0..1>\n"
    "      Use the filter yadif to deinterlacing\n",
    "Easy Rip command": "Easy Rip 命令",
    "Stop run ripper": "ripper 执行终止",
    "Run completed": "执行完成",
    "Your input command has error:\n{}": "输入的命令报错:\n{}",
    'Illegal char in -o "{}"': '-o "{}" 中有非法字符',
    'The directory "{}" does not exist': '目录 "{}" 不存在',
    "Missing -preset": "缺少 -preset",
    "Input file number == 0": "输入的文件数量为 0",
    'The file "{}" does not exist': '文件 "{}" 不存在',
    "No subtitle file exist as -sub auto when -i {} -o:dir {}": "-sub auto 没有在 -i {} -o:dir {} 中找到对应字幕文件",
    "Unsupported option: {}": "不支持的选项: {}",
    "Manually force exit": "手动强制退出",
    "Stop run command": "命令执行终止",
    # ripper.py
    "The preset custom must have custom:format or custom:template": "custom 预设必须要有 custom:format 或 custom:template",
    "There have error in running": "执行时出错",
    "FFmpeg report: {}": "FFmpeg report: {}",
}
